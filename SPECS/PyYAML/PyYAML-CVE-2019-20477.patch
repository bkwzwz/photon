From 8c5e47fe62d7b9e0282a176a4b79b8b2980dc704 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tina=20M=C3=BCller?= <cpan2@tinita.de>
Date: Mon, 18 Nov 2019 15:55:27 +0100
Subject: [PATCH] Move constructor for object/apply to Unsafe

---
 lib/yaml/constructor.py  | 8 ++++----
 lib3/yaml/constructor.py | 8 ++++----
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/lib/yaml/constructor.py b/lib/yaml/constructor.py
index 516dad1c..859c9494 100644
--- a/lib/yaml/constructor.py
+++ b/lib/yaml/constructor.py
@@ -683,10 +683,6 @@ def construct_python_object_new(self, suffix, node):
     u'tag:yaml.org,2002:python/object:',
     FullConstructor.construct_python_object)
 
-FullConstructor.add_multi_constructor(
-    u'tag:yaml.org,2002:python/object/apply:',
-    FullConstructor.construct_python_object_apply)
-
 FullConstructor.add_multi_constructor(
     u'tag:yaml.org,2002:python/object/new:',
     FullConstructor.construct_python_object_new)
@@ -703,6 +699,10 @@ def make_python_instance(self, suffix, node, args=None, kwds=None, newobj=False)
         return super(UnsafeConstructor, self).make_python_instance(
             suffix, node, args, kwds, newobj, unsafe=True)
 
+UnsafeConstructor.add_multi_constructor(
+    u'tag:yaml.org,2002:python/object/apply:',
+    UnsafeConstructor.construct_python_object_apply)
+
 # Constructor is same as UnsafeConstructor. Need to leave this in place in case
 # people have extended it directly.
 class Constructor(UnsafeConstructor):
diff --git a/lib3/yaml/constructor.py b/lib3/yaml/constructor.py
index 34fc1ae9..fb4f1e9f 100644
--- a/lib3/yaml/constructor.py
+++ b/lib3/yaml/constructor.py
@@ -694,10 +694,6 @@ def construct_python_object_new(self, suffix, node):
     'tag:yaml.org,2002:python/object:',
     FullConstructor.construct_python_object)
 
-FullConstructor.add_multi_constructor(
-    'tag:yaml.org,2002:python/object/apply:',
-    FullConstructor.construct_python_object_apply)
-
 FullConstructor.add_multi_constructor(
     'tag:yaml.org,2002:python/object/new:',
     FullConstructor.construct_python_object_new)
@@ -714,6 +710,10 @@ def make_python_instance(self, suffix, node, args=None, kwds=None, newobj=False)
         return super(UnsafeConstructor, self).make_python_instance(
             suffix, node, args, kwds, newobj, unsafe=True)
 
+UnsafeConstructor.add_multi_constructor(
+    'tag:yaml.org,2002:python/object/apply:',
+    UnsafeConstructor.construct_python_object_apply)
+
 # Constructor is same as UnsafeConstructor. Need to leave this in place in case
 # people have extended it directly.
 class Constructor(UnsafeConstructor):
