From 318ebd33c8beaf51ec62e4e69d9b1ca892c61ecb Mon Sep 17 00:00:00 2001
From: Mike Frysinger <vapier@gentoo.org>
Date: Wed, 31 Jan 2018 14:50:16 -0500
Subject: [PATCH] gd/gd2: make sure transparent palette index is within bounds
 #383

The gd image formats allow for a palette of 256 colors,
so if the transparent index is out of range, disable it.

(cherry picked from commit 0be86e1926939a98afbd2f3a23c673dfc4df2a7c)
---
 src/gd_gd.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

From 2dbd8f6e66b73ed43d9b81a45350922b80f75397 Mon Sep 17 00:00:00 2001
From: "Christoph M. Becker" <cmbecker69@gmx.de>
Date: Sat, 3 Feb 2018 18:31:16 +0100
Subject: [PATCH] Fix #383 (amendment)

When reading images in GD or GD2 format, we have to ensure that the
transparent color is not set, if it would refer to a non-extant palette
entry.

We back that up with respective regression tests.
---
 src/gd_gd.c              |   8 ++++----
 tests/gd/.gitignore      |   1 +
 tests/gd/CMakeLists.txt  |   1 +
 tests/gd/Makemodule.am   |   1 +
 tests/gd/bug00383.c      |  32 ++++++++++++++++++++++++++++++++
 tests/gd/bug00383.gd     | Bin 0 -> 1101 bytes
 tests/gd2/.gitignore     |   1 +
 tests/gd2/CMakeLists.txt |   1 +
 tests/gd2/Makemodule.am  |   1 +
 tests/gd2/bug00383.c     |  32 ++++++++++++++++++++++++++++++++
 tests/gd2/bug00383.gd2   | Bin 0 -> 1113 bytes
 11 files changed, 74 insertions(+), 4 deletions(-)
 create mode 100644 tests/gd/bug00383.c
 create mode 100644 tests/gd/bug00383.gd
 create mode 100644 tests/gd2/bug00383.c
 create mode 100644 tests/gd2/bug00383.gd2

diff --git a/src/gd_gd.c b/src/gd_gd.c
index a1e9ebf..cd0925f 100755
--- a/src/gd_gd.c
+++ b/src/gd_gd.c
@@ -91,9 +91,10 @@ _gdGetColors (gdIOCtx * in, gdImagePtr im, int gd2xFlag)
 		if (!gdGetWord (&im->transparent, in)) {
 			goto fail1;
 		}
-		if (im->transparent == 257) {
-			im->transparent = (-1);
-		}
+	}
+	/* Make sure transparent index is within bounds of the palette. */
+	if (!(im->trueColor) && (im->transparent >= im->colorsTotal || im->transparent < 0)) {
+		im->transparent = (-1);
 	}
 	GD2_DBG (printf
 	         ("Palette had %d colours (T=%d)\n", im->colorsTotal,
diff --git a/tests/gd/CMakeLists.txt b/tests/gd/CMakeLists.txt
index 6053ba5..6d7a996 100755
--- a/tests/gd/CMakeLists.txt
+++ b/tests/gd/CMakeLists.txt
@@ -1,4 +1,5 @@
 LIST(APPEND TESTS_FILES
+	bug00383
 	gd_null
 	gd_num_colors
 	gd_versiontest
diff --git a/tests/gd/Makemodule.am b/tests/gd/Makemodule.am
index e4a741f..922c5aa 100755
--- a/tests/gd/Makemodule.am
+++ b/tests/gd/Makemodule.am
@@ -1,4 +1,5 @@
 libgd_test_programs += \
+	gd/bug00383 \
 	gd/gd_null \
 	gd/gd_num_colors \
 	gd/gd_versiontest
diff --git a/tests/gd/bug00383.c b/tests/gd/bug00383.c
new file mode 100644
index 0000000..a63ba55
--- /dev/null
+++ b/tests/gd/bug00383.c
@@ -0,0 +1,32 @@
+/**
+ * Test that invalid transparent colors can't be read
+ * 
+ * We're reading a corrupt palette image in GD format, which has only a single
+ * palette entry, but claims that the transparent color would be 1.  We check
+ * that the transparency is simply ignored in this case.
+ * 
+ * See also <https://github.com/libgd/libgd/issues/383>
+ */
+
+
+#include "gd.h"
+#include "gdtest.h"
+
+
+int main()
+{
+    gdImagePtr im;
+    FILE *fp;
+
+    fp = gdTestFileOpen2("gd", "bug00383.gd");
+    gdTestAssert(fp != NULL);
+    im = gdImageCreateFromGd(fp);
+    gdTestAssert(im != NULL);
+    fclose(fp);
+
+    gdTestAssert(gdImageGetTransparent(im) == -1);
+
+    gdImageDestroy(im);
+
+    return gdNumFailures();
+}
diff --git a/tests/gd2/CMakeLists.txt b/tests/gd2/CMakeLists.txt
index d608231..1909a37 100755
--- a/tests/gd2/CMakeLists.txt
+++ b/tests/gd2/CMakeLists.txt
@@ -3,6 +3,7 @@ LIST(APPEND TESTS_FILES
 	bug00209
 	bug00309
 	bug00354
+	bug00383
 	gd2_empty_file
 	php_bug_72339
 	gd2_read_corrupt
diff --git a/tests/gd2/Makemodule.am b/tests/gd2/Makemodule.am
index 9c53b85..0ef4135 100755
--- a/tests/gd2/Makemodule.am
+++ b/tests/gd2/Makemodule.am
@@ -3,6 +3,7 @@ libgd_test_programs += \
 	gd2/bug00209 \
 	gd2/bug00309 \
 	gd2/bug00354 \
+	gd2/bug00383 \
 	gd2/gd2_empty_file \
 	gd2/php_bug_72339 \
 	gd2/gd2_read_corrupt \
diff --git a/tests/gd2/bug00383.c b/tests/gd2/bug00383.c
new file mode 100644
index 0000000..0f11855
--- /dev/null
+++ b/tests/gd2/bug00383.c
@@ -0,0 +1,32 @@
+/**
+ * Test that invalid transparent colors can't be read
+ * 
+ * We're reading a corrupt palette image in GD2 format, which has only a single
+ * palette entry, but claims that the transparent color would be 1.  We check
+ * that the transparency is simply ignored in this case.
+ * 
+ * See also <https://github.com/libgd/libgd/issues/383>
+ */
+
+
+#include "gd.h"
+#include "gdtest.h"
+
+
+int main()
+{
+    gdImagePtr im;
+    FILE *fp;
+
+    fp = gdTestFileOpen2("gd2", "bug00383.gd2");
+    gdTestAssert(fp != NULL);
+    im = gdImageCreateFromGd2(fp);
+    gdTestAssert(im != NULL);
+    fclose(fp);
+
+    gdTestAssert(gdImageGetTransparent(im) == -1);
+
+    gdImageDestroy(im);
+
+    return gdNumFailures();
+}

-- 
2.7.4

