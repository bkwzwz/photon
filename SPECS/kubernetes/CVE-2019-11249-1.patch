From de686773919f1b12b9d834a8cfce90ebf727599d Mon Sep 17 00:00:00 2001
From: M00nF1sh <yyyng@amazon.com>
Date: Mon, 24 Jun 2019 11:16:00 -0700
Subject: [PATCH] refactors to kubernetes CP command

---
 pkg/kubectl/cmd/cp.go      |  5 +----
 pkg/kubectl/cmd/cp_test.go | 36 ++++++++++++++++-------------------
 2 files changed, 17 insertions(+), 24 deletions(-)

diff --git a/pkg/kubectl/cmd/cp.go b/pkg/kubectl/cmd/cp.go
index 7978185c7a7b6..fb6e170f5d52e 100644
--- a/pkg/kubectl/cmd/cp.go
+++ b/pkg/kubectl/cmd/cp.go
@@ -494,16 +494,13 @@ func linkJoin(base, link string) string {
 	if filepath.IsAbs(link) {
 		return link
 	}
-	return filepath.Join(base, link)
+	return filepath.Join(filepath.Dir(base), link)
 }
 
 // isDestRelative returns true if dest is pointing outside the base directory,
 // false otherwise.
 func isDestRelative(base, dest string) bool {
 	fullPath := dest
-	if !filepath.IsAbs(dest) {
-		fullPath = filepath.Join(base, dest)
-	}
 	relative, err := filepath.Rel(base, fullPath)
 	if err != nil {
 		return false
diff --git a/pkg/kubectl/cmd/cp_test.go b/pkg/kubectl/cmd/cp_test.go
index 605c5ad7e8a44..146f25b12b4c1 100644
--- a/pkg/kubectl/cmd/cp_test.go
+++ b/pkg/kubectl/cmd/cp_test.go
@@ -194,12 +194,12 @@ func TestIsDestRelative(t *testing.T) {
 	}{
 		{
 			base:     "/dir",
-			dest:     "../link",
+			dest:     "/dir/../link",
 			relative: false,
 		},
 		{
 			base:     "/dir",
-			dest:     "../../link",
+			dest:     "/dir/../../link",
 			relative: false,
 		},
 		{
@@ -209,32 +209,27 @@ func TestIsDestRelative(t *testing.T) {
 		},
 		{
 			base:     "/dir",
-			dest:     "link",
+			dest:     "/dir/link",
 			relative: true,
 		},
 		{
 			base:     "/dir",
-			dest:     "int/file/link",
+			dest:     "/dir/int/../link",
 			relative: true,
 		},
 		{
-			base:     "/dir",
-			dest:     "int/../link",
+			base:     "dir",
+			dest:     "dir/link",
 			relative: true,
 		},
 		{
-			base:     "/dir",
-			dest:     "/dir/link",
+			base:     "dir",
+			dest:     "dir/int/../link",
 			relative: true,
 		},
 		{
-			base:     "/dir",
-			dest:     "/dir/int/../link",
-			relative: true,
-		},
-		{
-			base:     "/dir",
-			dest:     "/dir/../../link",
+			base:     "dir",
+			dest:     "dir/../../link",
 			relative: false,
 		},
 	}
@@ -810,9 +805,10 @@ func TestUntar(t *testing.T) {
 		}
 		return expected + suffix
 	}
-	mkBacktickExpectation := func(expected, suffix string) string {
-		dir, _ := filepath.Split(filepath.Clean(expected))
-		if len(strings.Split(dir, string(os.PathSeparator))) <= 1 {
+	mkBacktickExpectation := func(path, expected, suffix string) string {
+		linkTarget := filepath.Join(backtick(path), "link-target")
+		baseDir := filepath.Join(testdir, dest)
+		if !isDestRelative(baseDir, linkJoin(filepath.Join(baseDir, path), linkTarget)) {
 			return ""
 		}
 		return expected + suffix
@@ -830,7 +826,7 @@ func TestUntar(t *testing.T) {
 		}, file{
 			path:       f.path + "-outerlink",
 			linkTarget: filepath.Join(backtick(f.path), "link-target"),
-			expected:   mkBacktickExpectation(f.expected, "-outerlink"),
+			expected:   mkBacktickExpectation(f.path, f.expected, "-outerlink"),
 		}, file{
 			path:       f.path + "-outerlink-abs",
 			linkTarget: filepath.Join(testdir, "link-target"),
@@ -936,7 +932,7 @@ func TestUntar(t *testing.T) {
 
 // backtick returns a path to one directory up from the target
 func backtick(target string) string {
-	rel, _ := filepath.Rel(filepath.Dir(target), "../")
+	rel := filepath.Join(filepath.Dir(target), "../")
 	return rel
 }
 
