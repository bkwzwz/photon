From 126b8abbdbc1ad10bc8172817a98f8fcb659c63f Mon Sep 17 00:00:00 2001
From: Sam Doran <sdoran@redhat.com>
Date: Wed, 26 Feb 2020 15:21:40 -0500
Subject: [PATCH] fetch - normalize and validate paths

---
 changelogs/fragments/fetch-path-traversal.yml |  4 ++++
 lib/ansible/plugins/action/fetch.py           | 15 +++++++++++++--
 2 files changed, 17 insertions(+), 2 deletions(-)
 create mode 100644 changelogs/fragments/fetch-path-traversal.yml

diff --git a/changelogs/fragments/fetch-path-traversal.yml b/changelogs/fragments/fetch-path-traversal.yml
new file mode 100644
index 0000000000000..a8fd0a60c8321
--- /dev/null
+++ b/changelogs/fragments/fetch-path-traversal.yml
@@ -0,0 +1,4 @@
+bugfixes:
+  - >
+    **security issue** fetch - normalize and compare paths used by fetch
+    module to prevent path traversal (CVE-2020-1735)
diff --git a/lib/ansible/plugins/action/fetch.py b/lib/ansible/plugins/action/fetch.py
index e6783e11dbe1e..8f124d26f132a 100644
--- a/lib/ansible/plugins/action/fetch.py
+++ b/lib/ansible/plugins/action/fetch.py
@@ -129,9 +129,20 @@ def run(self, tmp=None, task_vars=None):
                     target_name = task_vars['inventory_hostname']
                 else:
                     target_name = self._play_context.remote_addr
-                dest = "%s/%s/%s" % (self._loader.path_dwim(dest), target_name, source_local)
 
-            dest = dest.replace("//", "/")
+                # Strip leading character if path is absolute so it will join properly
+                if os.path.isabs(source_local):
+                    source_local = source_local[1:]
+
+                # Normalize paths to resolve '..' and remove any '//' so we can compare the prefix
+                normalized_dest = os.path.normpath(os.path.join(self._loader.path_dwim(dest), target_name))
+                normalized_dest_with_source = os.path.normpath(os.path.join(normalized_dest, source_local))
+
+                # If 'source_local' contains relative paths, such as '../', then fail to prevent path traversal
+                if os.path.commonprefix([normalized_dest, normalized_dest_with_source]) != normalized_dest:
+                    raise AnsibleError('Source path would result in incorrect destination: {0}'.format(source_local))
+
+                dest = normalized_dest_with_source
 
             if remote_checksum in ('0', '1', '2', '3', '4', '5'):
                 result['changed'] = False
