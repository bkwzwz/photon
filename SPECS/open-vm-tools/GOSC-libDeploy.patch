diff --git a/open-vm-tools/libDeployPkg/linuxDeployment.c b/open-vm-tools/libDeployPkg/linuxDeployment.c
index 1af08936..227fb381 100644
--- a/open-vm-tools/libDeployPkg/linuxDeployment.c
+++ b/open-vm-tools/libDeployPkg/linuxDeployment.c
@@ -651,13 +651,17 @@ GetPackageInfo(const char* packageName,
    close(fd);
 
    // Create space and copy the command
-   *command = malloc(VMWAREDEPLOYPKG_CMD_LENGTH);
+   *command = malloc(VMWAREDEPLOYPKG_CMD_LENGTH + 1);
    if (!*command) {
       SetDeployError("Error allocating memory.");
       return FALSE;
    }
 
-   memcpy(*command, hdr.command, VMWAREDEPLOYPKG_CMD_LENGTH);
+   // will pad with '\0' if necessary
+   strncpy(*command, hdr.command, VMWAREDEPLOYPKG_CMD_LENGTH);
+   // hdr.command is a structure of fixed length VMWAREDEPLOYPKG_CMD_LENGTH
+   (*command)[VMWAREDEPLOYPKG_CMD_LENGTH] = '\0';
+
    *archiveType = hdr.payloadType;
    *flags = hdr.reserved;
 
@@ -1315,6 +1319,24 @@ Deploy(const char* packageName)
       free(command);
       deployPkgStatus = CloudInitSetup(imcDirPath);
    } else {
+       if (strstr(command, "scripts/Customize.pl") || strstr(command, "scripts/customize.sh")) {
+           char PHOTON_OS_LAUNCH_COMMAND[256] = {0};
+
+           free(command);
+           command = NULL;
+
+           snprintf(PHOTON_OS_LAUNCH_COMMAND, sizeof(PHOTON_OS_LAUNCH_COMMAND),
+                   "/bin/bash /usr/share/open-vm-tools/GOSC/gosc-scripts/imc-shell/imgcust-scripts/customize.sh %s/cust.cfg",
+                   imcDirPath);
+
+           // The command will be parsed alter and can be of arbitrary length
+           command = strdup(PHOTON_OS_LAUNCH_COMMAND);
+           if (!command) {
+               SetDeployError("Error allocating memory.");
+               return DEPLOYPKG_STATUS_ERROR;
+           }
+           _DeployPkg_SkipReboot(true);
+       }
       sLog(log_info, "Executing traditional GOSC workflow.\n");
       deploymentResult = ForkExecAndWaitCommand(command, false);
       free(command);
